name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: npm ci
      - run: npm run tslint_check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: npm ci
      - run: npm run cmake_all
      - name: Persist workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: npm run test_report
      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: jest-reports
          path: ./reports/jest

  integration:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: ./integration_tests/__tests__/start-bitcoind.sh $(pwd) 'integration_tests'
      - run: sleep 3
      - run: npm run test_integration
      - name: Store integration artifacts
        uses: actions/upload-artifact@v3
        with:
          name: integration-artifacts
          path: ./build_coverage/lcov_cfddlc_output
      - name: Store integration test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-reports
          path: ./reports/integration

  prebuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: touch .no-postinstall
      - run: npm ci
      - run: npm run-script prebuild_all
      - name: Store prebuild artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds
          path: ./prebuilds

  release:
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - uses: actions/checkout@v2
      - name: Download prebuild artifacts
        uses: actions/download-artifact@v3
        with:
          name: prebuilds
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: touch .no-postinstall
      - run: npm ci
      - run: npm run-script prebuild_upload_all -- ${{ secrets.GH_ACCESS_TOKEN }}
